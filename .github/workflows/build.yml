name: Build and Package Go Project

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get the latest tag
        id: get_tag
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Set up Go environment
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'

      - name: Build binary
        env:
          GOOS: linux
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -o ropen-${{ matrix.arch }}

      - name: Install FPM (Effing Package Management)
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby ruby-dev rubygems build-essential
          sudo gem install --no-document fpm

      - name: Create .deb package
        run: |
          fpm -s dir -t deb -n ropen -v ${{ env.tag }} -a ${{ matrix.arch }} \
          --description "ropen Application" \
          --license "MIT" \
          --url "https://github.com/github.com/zhanglongx/ropen" \
          --vendor "Longxiao Zhang" \
          --maintainer "Longxiao Zhang <zhanglongx@gmail.com>" \
          --prefix /usr/local/bin \
          ropen-${{ matrix.arch }} \
          certs/ropenCA.crt=/etc/ropen/ropenCA.crt \
          certs/ropenCA.key=/etc/ropen/ropenCA.key

      - name: Create .rpm package
        run: |
          fpm -s dir -t rpm -n ropen -v ${{ env.tag }} -a ${{ matrix.arch }} \
          --description "ropen Application" \
          --license "MIT" \
          --url "https://github.com/github.com/zhanglongx/ropen" \
          --vendor "Longxiao Zhang" \
          --maintainer "Longxiao Zhang <zhanglongx@gmail.com>" \
          --prefix /usr/local/bin \
          ropen-${{ matrix.arch }} \
          certs/ropenCA.crt=/etc/ropen/ropenCA.crt \
          certs/ropenCA.key=/etc/ropen/ropenCA.key

      - name: Upload DEB asset to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./ropen_${{ env.tag }}_${{ matrix.arch }}.deb
          asset_name: ropen_${{ env.tag }}_${{ matrix.arch }}.deb
          asset_content_type: application/octet-stream

      - name: Find RPM asset
        id: find_rpm
        run: |
          echo "asset_path=$(find . -name 'ropen-*.rpm')" >> $GITHUB_ENV
          echo "asset_name=$(basename $(find . -name 'ropen-*.rpm'))" >> $GITHUB_ENV

      - name: Upload RPM asset to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.asset_path }}
          asset_name: ${{ env.asset_name }})
          asset_content_type: application/octet-stream
